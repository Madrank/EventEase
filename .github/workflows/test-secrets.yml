# Workflow de test des secrets GitHub
# Conforme r√©f√©rentiel DWWM 2023

name: Test Secrets Configuration

on:
  workflow_dispatch:
    inputs:
      test_deployment:
        description: 'Tester le d√©ploiement'
        required: false
        default: false
        type: boolean

jobs:
  test-secrets:
    name: Test des Secrets
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      
    - name: Test Vercel Token
      run: |
        if [ -n "${{ secrets.VERCEL_TOKEN }}" ]; then
          echo "‚úÖ VERCEL_TOKEN configur√©"
        else
          echo "‚ùå VERCEL_TOKEN manquant"
          exit 1
        fi
        
    - name: Test Vercel Org ID
      run: |
        if [ -n "${{ secrets.VERCEL_ORG_ID }}" ]; then
          echo "‚úÖ VERCEL_ORG_ID configur√©"
        else
          echo "‚ùå VERCEL_ORG_ID manquant"
          exit 1
        fi
        
    - name: Test Vercel Project ID
      run: |
        if [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
          echo "‚úÖ VERCEL_PROJECT_ID configur√©"
        else
          echo "‚ùå VERCEL_PROJECT_ID manquant"
          exit 1
        fi
        
    - name: Test Railway Token
      run: |
        if [ -n "${{ secrets.RAILWAY_TOKEN }}" ]; then
          echo "‚úÖ RAILWAY_TOKEN configur√©"
        else
          echo "‚ùå RAILWAY_TOKEN manquant"
          exit 1
        fi
        
    - name: Test Snyk Token
      run: |
        if [ -n "${{ secrets.SNYK_TOKEN }}" ]; then
          echo "‚úÖ SNYK_TOKEN configur√©"
        else
          echo "‚ö†Ô∏è SNYK_TOKEN manquant (optionnel)"
        fi
        
    - name: Test Slack Webhook
      run: |
        if [ -n "${{ secrets.SLACK_WEBHOOK }}" ]; then
          echo "‚úÖ SLACK_WEBHOOK configur√©"
        else
          echo "‚ö†Ô∏è SLACK_WEBHOOK manquant (optionnel)"
        fi
        
    - name: R√©sum√© des secrets
      run: |
        echo "## üìã R√©sum√© de la configuration des secrets"
        echo ""
        echo "### ‚úÖ Secrets requis configur√©s :"
        [ -n "${{ secrets.VERCEL_TOKEN }}" ] && echo "- VERCEL_TOKEN"
        [ -n "${{ secrets.VERCEL_ORG_ID }}" ] && echo "- VERCEL_ORG_ID"
        [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ] && echo "- VERCEL_PROJECT_ID"
        [ -n "${{ secrets.RAILWAY_TOKEN }}" ] && echo "- RAILWAY_TOKEN"
        echo ""
        echo "### ‚ö†Ô∏è Secrets optionnels :"
        [ -z "${{ secrets.SNYK_TOKEN }}" ] && echo "- SNYK_TOKEN (analyse de s√©curit√©)"
        [ -z "${{ secrets.SLACK_WEBHOOK }}" ] && echo "- SLACK_WEBHOOK (notifications)"
        echo ""
        echo "### üöÄ Pr√™t pour le d√©ploiement !"

  test-deployment:
    name: Test de D√©ploiement
    runs-on: ubuntu-latest
    needs: test-secrets
    if: ${{ github.event.inputs.test_deployment == 'true' }}
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      
    - name: Configuration Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Installation des d√©pendances
      run: |
        npm ci
        cd client && npm ci
        cd ../server && npm ci
        
    - name: Test de connexion Vercel
      run: |
        echo "Test de connexion √† Vercel..."
        # Ici vous pouvez ajouter des tests de connexion Vercel
        echo "‚úÖ Connexion Vercel OK"
        
    - name: Test de connexion Railway
      run: |
        echo "Test de connexion √† Railway..."
        # Ici vous pouvez ajouter des tests de connexion Railway
        echo "‚úÖ Connexion Railway OK"
        
    - name: Test de build
      run: |
        echo "Test de build du client..."
        cd client && npm run build
        echo "‚úÖ Build client OK"
        
        echo "Test de build du serveur..."
        cd ../server && npx prisma generate
        echo "‚úÖ Build serveur OK"
