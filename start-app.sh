#!/bin/bash
# Script de d√©marrage EventEase - Une seule commande pour tout d√©marrer
# Conforme r√©f√©rentiel DWWM 2023

echo "üöÄ D√©marrage d'EventEase..."
echo "================================"

# V√©rifier si Docker Desktop est en cours d'ex√©cution
echo "üìã V√©rification des pr√©requis..."

# V√©rifier Docker
if docker ps >/dev/null 2>&1; then
    echo "‚úÖ Docker est disponible"
    echo "üê≥ D√©marrage de Redis..."
    docker-compose up -d
    if [ $? -eq 0 ]; then
        echo "‚úÖ Redis d√©marr√© avec succ√®s"
    else
        echo "‚ùå Erreur lors du d√©marrage de Redis"
    fi
else
    echo "‚ö†Ô∏è  Docker n'est pas disponible - Redis ne sera pas d√©marr√©"
fi

# V√©rifier que les d√©pendances sont install√©es
echo "üì¶ V√©rification des d√©pendances..."

if [ ! -d "node_modules" ]; then
    echo "üì• Installation des d√©pendances racine..."
    npm install
fi

if [ ! -d "server/node_modules" ]; then
    echo "üì• Installation des d√©pendances serveur..."
    cd server
    npm install
    cd ..
fi

if [ ! -d "client/node_modules" ]; then
    echo "üì• Installation des d√©pendances client..."
    cd client
    npm install
    cd ..
fi

# G√©n√©rer le client Prisma
echo "üîß Configuration de la base de donn√©es..."
cd server
npx prisma generate >/dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ Client Prisma g√©n√©r√©"
else
    echo "‚ö†Ô∏è  Erreur lors de la g√©n√©ration du client Prisma (peut √™tre ignor√©e)"
fi
cd ..

# D√©marrer l'application
echo "üöÄ D√©marrage de l'application..."
echo "   - Backend: http://localhost:3001"
echo "   - Frontend: http://localhost:3000"
echo "   - API Docs: http://localhost:3001/api"
echo "   - Health Check: http://localhost:3001/health"
echo ""
echo "Appuyez sur Ctrl+C pour arr√™ter l'application"
echo "================================"

# D√©marrer l'application avec concurrently
npm run dev
